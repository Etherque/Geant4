#include "DetectorConstruction.hh"
#include "WireChamberParametrization.hh"

#include "G4Box.hh"
#include "G4Tubs.hh"
#include "G4LogicalVolume.hh"
#include "G4PVPlacement.hh"
#include "G4PVParameterised.hh"
#include "G4SystemOfUnits.hh"
#include "G4Material.hh"

// For defining silicon and helium from the database
#include "G4NistManager.hh"


#include "G4VisAttributes.hh"
#include "G4Colour.hh"

DetectorConstruction::DetectorConstruction()
{
}

DetectorConstruction::~DetectorConstruction()
{
}

G4VPhysicalVolume* DetectorConstruction::Construct()
{


// -------    Material definitions ------------- //

   G4double z, a, density, fractionmass;
   G4int ncomponents;
   G4Material* Silicon = new G4Material("Silicon", z=14., a=28.0855*g/mole, density=2.330*g/cm3);
   G4Material* Helium = new G4Material("Helium", z = 2, a=4.001*g/mole, density=0.0001785*g/cm3);
   
   G4Element* Cr = new G4Element("Chrome", "Cr", z=25, a=  51.996*g/mole);
   G4Element* Fe = new G4Element("Iron"  , "Fe", z=26, a=  55.845*g/mole);
   G4Element* Co = new G4Element("Cobalt", "Co", z=27, a=  58.933*g/mole);
   G4Element* Ni = new G4Element("Nickel", "Ni", z=28, a=  58.693*g/mole);
   G4Element* W  = new G4Element("Tungsten","W", z=74, a= 183.850*g/mole);
   G4Element* H  = new G4Element("Hydrogen","H", z=1, a= 1.01*g/mole);
   G4Element* C  = new G4Element("Carbon","C", z=6, a= 12.01*g/mole);
   G4Element* O  = new G4Element("Oxygen","O", z=8, a= 16.00*g/mole);
   G4Element* Al = new G4Element("Aluminum","Al", z=13, 26.98*g/mole);
   
   G4Material* Havar = new G4Material("Havar", density= 8.3*g/cm3, ncomponents=5);
   Havar->AddElement(Cr, fractionmass=0.1785);
   Havar->AddElement(Fe, fractionmass=0.1822);
   Havar->AddElement(Co, fractionmass=0.4452);
   Havar->AddElement(Ni, fractionmass=0.1310);
   Havar->AddElement(W , fractionmass=0.0631);
   
   G4Material* Mylar = new G4Material("Mylar", density= 1.38*g/cm3, ncomponents=3);
   Mylar->AddElement(C,fractionmass=0.6250);
   Mylar->AddElement(H,fractionmass=0.0417);
   Mylar->AddElement(O,fractionmass=0.3333);
   
   G4Material* PureAluminum = new G4Material("PureAluminum", density= 2.70*g/cm3, ncomponents=1);
   PureAluminum->AddElement(Al,fractionmass=1.00);

// ----------- Definitions of all dimensions -------------//
// Currently unused values commented out to save warnings //

   // Helium world box
   G4double WorldDimX = 1.0*m, WorldDimY = 1.0*m, WorldDimZ = 1.0*m;

   // Actual wire chamber
   G4double WireChamberDimX = 0.003*mm, WireChamberDimY=20*cm, WireChamberDimZ = 70*cm;

   // Size of the wire chamber system
   G4double WireChamberSystemDimX = 5*cm, WireChamberSystemDimY = 35*cm,
            WireChamberSystemDimZ = 90*cm;
  

// ----------- Construct a world box made of helium --------------- //
   G4Box* solidWorld = new G4Box("world", WorldDimX/2, WorldDimY/2, WorldDimZ/2);
   G4LogicalVolume* logicWorld = new G4LogicalVolume(solidWorld, Helium, "World", 0, 0, 0);
   G4PVPlacement* physWorld = new G4PVPlacement(0,
				  G4ThreeVector(0,0,0),
				  logicWorld,
				  "World",
				  0,
				  false,
				  0);

// ----------- Since the world volume cannot contain both replicated volumes and regular volumes,


  // Wire chamber Tracker//
   G4double WireChamberPosX = 3.55*cm, WireChamberPosY = 0*cm, WireChamberPosZ = 0*cm;

  G4Box* solidTracker = new G4Box("tracker", WireChamberSystemDimX/2,
					      WireChamberSystemDimY/2,
					      WireChamberSystemDimZ/2);
   G4LogicalVolume* logicTracker = new G4LogicalVolume(solidTracker,
						       Helium,
						       "Tracker");
   G4PVPlacement* physTracker = new G4PVPlacement(0,
			 G4ThreeVector(WireChamberPosX, WireChamberPosY, WireChamberPosZ),
				    logicTracker,
				    "Tracker",
				    logicWorld,
				    false,
  				    0);

/////////////////////////////*************************************//////////////////////////////////
  G4Box* solidTrackerleft = new G4Box("tracker", WireChamberSystemDimX/2,
					      WireChamberSystemDimY/2,
					      WireChamberSystemDimZ/2);
   G4LogicalVolume* logicTrackerleft = new G4LogicalVolume(solidTrackerleft,
						       Helium,
						       "Tracker");
   G4PVPlacement* physTrackerleft = new G4PVPlacement(0,
			 G4ThreeVector(-WireChamberPosX, WireChamberPosY, WireChamberPosZ),
				    logicTrackerleft,
				    "Tracker",
				    logicWorld,
				    false,
  				    0);
  
 logicTracker->SetVisAttributes(G4VisAttributes::GetInvisible());						
 logicTrackerleft->SetVisAttributes(G4VisAttributes::GetInvisible());

// ----------- Construct the wire chamber solid and logical volumes. Wire chambers are nearly


   G4int NumOfWires = 80;
   G4ThreeVector firstPosition(0*cm, 0*cm, -10*cm);
   G4double spacingZ = 0.5*cm;
   G4double WireDiameter = 1.0*mm;
   G4double WCPosTracker =1.0*cm;
   G4double WCthick = 1.6*cm;

  /* G4Box* solidWireChamber = new G4Box("WireChamber", WireDiameter/2, WireChamberDimY/2,
WireDiameter/2);*/

    G4Box* solidWireChamber = new G4Box("WireChamber", WCthick/2, WireChamberDimY/2, WireChamberDimZ/2);
    G4LogicalVolume* logicWireChamber = new G4LogicalVolume(solidWireChamber, Helium, "WireChamber", 0,0,0);//Helium
       
    G4Box* solidWireChamber2 = new G4Box("WireChamber", WCthick/2, WireChamberDimY/2, WireChamberDimZ/2);
    G4LogicalVolume* logicWireChamber2 = new G4LogicalVolume(solidWireChamber2, Helium, "WireChamber", 0,0,0);//Helium
    
    fWireChamber = new G4PVPlacement(0,
		                     G4ThreeVector(-WCPosTracker, 0,0),
					   logicWireChamber,
					   "CBInnerR",
						logicTracker,
						false,
						0);
    fWireChamber2 = new G4PVPlacement(0,
		                     G4ThreeVector(WCPosTracker, 0,0),
					   logicWireChamber2,
					   "CBOuterR",
						logicTracker,
						false,
						0);
    

   G4Box* solidWireChamberleft = new G4Box("WireChamber", WCthick/2, WireChamberDimY/2, WireChamberDimZ/2);
   G4LogicalVolume* logicWireChamberleft = new G4LogicalVolume(solidWireChamberleft, Helium, "WireChamber", 0,0,0);//Helium
   
    G4Box* solidWireChamberleft2 = new G4Box("WireChamber", WCthick/2, WireChamberDimY/2, WireChamberDimZ/2);
    G4LogicalVolume* logicWireChamberleft2 = new G4LogicalVolume(solidWireChamberleft2, Helium, "WireChamber", 0,0,0);
    
    fWireChamberleft = new G4PVPlacement(0,
		                     G4ThreeVector(WCPosTracker, 0,0),
					   logicWireChamberleft,
					   "CBInnerL",
						logicTrackerleft,
						false,
						0);
    fWireChamberleft2 = new G4PVPlacement(0,
		                     G4ThreeVector(-WCPosTracker,0,0),
					   logicWireChamberleft2,
					   "CBOuterL",
						logicTrackerleft,
						false,
						0);
					     
   G4VisAttributes* BoxVisAttWhite = new G4VisAttributes(G4Colour(1.0, 1.0, 1.0));
   G4VisAttributes* BoxVisAttBlue = new G4VisAttributes(G4Colour(0.0, 0.0, 1.0));
   BoxVisAttWhite->SetForceSolid(TRUE);
   BoxVisAttBlue->SetForceSolid(TRUE);
   logicWireChamber->SetVisAttributes(BoxVisAttWhite);
   logicWireChamber2->SetVisAttributes(BoxVisAttWhite);
   logicWireChamberleft->SetVisAttributes(BoxVisAttWhite);
   logicWireChamberleft2->SetVisAttributes(BoxVisAttWhite);

   // ---------- Construct the Havar Tube and make it Cyan ------------------//
   G4double HavarTubeThickness = 0.0025*mm, HavarTubeRadius = 6.5*mm, HavarTubeLength = 10.0*cm,
            startAngle = 0.*deg, spanningAngle = 360.*deg;
   G4double HavarTubePosX = 0, HavarTubePosY = 0, HavarTubePosZ = 0;

   G4Tubs* HavarTube = new G4Tubs("HavarTube",
                                   HavarTubeRadius-HavarTubeThickness,
                                   HavarTubeRadius,
                                   HavarTubeLength,
                                   startAngle,
                                   spanningAngle);
 
   G4LogicalVolume* logicHavarTube = new G4LogicalVolume(HavarTube,
                                                         Havar,
                                                         "HavarTubefilm",
                                                         0,0,0);

   fHavarTube = new G4PVPlacement(0,
                                  G4ThreeVector(HavarTubePosX, HavarTubePosY, HavarTubePosZ),
                                  logicHavarTube,
                                 "HavarTube",
                                  logicWorld,
                                  false,
                                  0);

   G4VisAttributes* BoxVisAttCyan = new G4VisAttributes(G4Colour(0., 1.0, 1.0));
   BoxVisAttCyan->SetForceSolid(TRUE);
   logicHavarTube->SetVisAttributes(BoxVisAttCyan); 

 //************************************************************ Construct the AluminumTube Frame and make it White*********************************************************************//
                       
    //-------------------bottom Cuboid--------------------------------------//  
   G4double BottomCubDimX = 16*mm, BottomCubDimY = 7.5*mm, BottomCubDimZ= 100*mm;
   G4double BottomCubPosX = 0, BottomCubPosY = -38*mm, BottomCubPosZ = 0;
   
   G4Box* BottomCub = new G4Box("AlBottomCuboid", BottomCubDimX/2,BottomCubDimY/2, BottomCubDimZ/2);
   
   G4LogicalVolume* logicBottomCub = new G4LogicalVolume(
					       BottomCub, 
					       PureAluminum,
					       "BottomCubiod", 
					       0,0,0);
   fBottomCub = new G4PVPlacement(0,
		                 G4ThreeVector(BottomCubPosX, BottomCubPosY, BottomCubPosZ),
			         logicBottomCub,
		       	         "BottomCub",
				 logicWorld,
		 		 false,
                                  0);  
  G4VisAttributes* BoxVisAttGrey = new G4VisAttributes(G4Colour(0.5, 0.5, 0.5));
  BoxVisAttGrey->SetForceSolid(TRUE);
  logicBottomCub->SetVisAttributes(BoxVisAttGrey);
  
  //-------------------top Cuboid--------------------------------------//  
   G4double TopCubDimX = 16*mm, TopCubDimY = 7.5*mm, TopCubDimZ= 100*mm;
   G4double TopCubPosX = 0, TopCubPosY = 38*mm, TopCubPosZ = 0;
   
   G4Box* TopCub = new G4Box("AlTopCuboid", TopCubDimX/2,TopCubDimY/2, TopCubDimZ/2);
   
   G4LogicalVolume* logicTopCub = new G4LogicalVolume(
					       TopCub, 
					       PureAluminum,
					       "TopCubiod", 
					       0,0,0);
   fTopCub = new G4PVPlacement(0,
		                 G4ThreeVector(TopCubPosX, TopCubPosY, TopCubPosZ),
			         logicTopCub,
		       	         "TopCub",
				 logicWorld,
		 		 false,
                                  0);  
  
  logicTopCub->SetVisAttributes(BoxVisAttGrey);
  
  //-----------------------Front Ring----------------------------------//
  G4double FrontInnerRadius = 6.5*mm, FrontOutsideRadius = 11.5*mm, FrontThickness = 5*mm;
  
   G4double FrontPosX = 0, FrontPosY = 0, FrontPosZ = HavarTubeLength-FrontThickness/2;

   G4Tubs* FrontRing = new G4Tubs("AlFrontRing",
                                   FrontInnerRadius,
                                   FrontOutsideRadius,
                                   FrontThickness,
                                   startAngle,
                                   spanningAngle);
 
   G4LogicalVolume* logicFrontRing = new G4LogicalVolume(FrontRing,
                                                         PureAluminum,
                                                         "FrontRingFrame",
                                                         0,0,0);

   fFrontRing = new G4PVPlacement(0,
                                  G4ThreeVector(FrontPosX, FrontPosY, FrontPosZ),
                                  logicFrontRing,
                                 "FrontRing",
                                  logicWorld,
                                  false,
                                  0);
  
  logicFrontRing->SetVisAttributes(BoxVisAttGrey);   

//-----------------------Back Ring----------------------------------//
  G4double BackInnerRadius = 6.5*mm, BackOutsideRadius = 11.5*mm, BackThickness = 5*mm;
  
   G4double BackPosX = 0, BackPosY = 0, BackPosZ = -HavarTubeLength+BackThickness/2;

   G4Tubs* BackRing = new G4Tubs("AlBackRing",
                                   BackInnerRadius,
                                   BackOutsideRadius,
                                   BackThickness,
                                   startAngle,
                                   spanningAngle);
 
   G4LogicalVolume* logicBackRing = new G4LogicalVolume(BackRing,
                                                         PureAluminum,
                                                         "BackRingFrame",
                                                         0,0,0);

   fBackRing = new G4PVPlacement(0,
                                  G4ThreeVector(BackPosX, BackPosY, BackPosZ),
                                  logicBackRing,
                                 "BackRing",
                                  logicWorld,
                                  false,
                                  0);
  
  logicBackRing->SetVisAttributes(BoxVisAttGrey);

  //--------------Front Top Cubiod ----------------------//
  G4double FrontTopCubDimX = 5*mm, FrontTopCubDimY = 26.5*mm, FrontTopCubDimZ = 5*mm;
  
  G4double FrontTopCubPosX = 0, FrontTopCubPosY = 24.75*mm, FrontTopCubPosZ = FrontPosZ;
  
  G4Box* FrontTopCub = new G4Box("AlFrontTopCub",FrontTopCubDimX/2, FrontTopCubDimY/2, FrontTopCubDimZ/2);
   
  G4LogicalVolume* logicFrontTopCub = new G4LogicalVolume(FrontTopCub,
                                                          PureAluminum,
                                                          "FrontTopCubFrame",
                                                          0,0,0);
  fFrontTopCub = new G4PVPlacement(0,
                                   G4ThreeVector(FrontTopCubPosX, FrontTopCubPosY, FrontTopCubPosZ),
                                   logicFrontTopCub,
                                   "FrontTopCub",
                                   logicWorld,
                                  false,
                                  0);                    
  
  logicFrontTopCub->SetVisAttributes(BoxVisAttGrey);

   //--------------Front Bottom Cubiod ----------------------//
  G4double FrontBottomCubDimX = 5*mm, FrontBottomCubDimY = 26.5*mm, FrontBottomCubDimZ = 5*mm;
  
  G4double FrontBottomCubPosX = 0, FrontBottomCubPosY = -24.75*mm, FrontBottomCubPosZ = FrontPosZ;
  
  G4Box* FrontBottomCub = new G4Box("AlFrontBottomCub",FrontBottomCubDimX/2, FrontBottomCubDimY/2, FrontBottomCubDimZ/2);
   
  G4LogicalVolume* logicFrontBottomCub = new G4LogicalVolume(FrontBottomCub,
                                                          PureAluminum,
                                                          "FrontBottomCubFrame",
                                                          0,0,0);
  fFrontBottomCub = new G4PVPlacement(0,
                                   G4ThreeVector(FrontBottomCubPosX, FrontBottomCubPosY, FrontBottomCubPosZ),
                                   logicFrontBottomCub,
                                   "FrontBottomCub",
                                   logicWorld,
                                  false,
                                  0);  

  logicFrontBottomCub->SetVisAttributes(BoxVisAttGrey);

 //--------------Back Top Cubiod ----------------------//
  G4double BackTopCubDimX = 5*mm, BackTopCubDimY = 26.5*mm, BackTopCubDimZ = 5*mm;
  
  G4double BackTopCubPosX = 0, BackTopCubPosY = 24.75*mm, BackTopCubPosZ = BackPosZ;
  
  G4Box* BackTopCub = new G4Box("AlBackTopCub",BackTopCubDimX/2, BackTopCubDimY/2, BackTopCubDimZ/2);
   
  G4LogicalVolume* logicBackTopCub = new G4LogicalVolume(BackTopCub,
                                                          PureAluminum,
                                                          "BackTopCubFrame",
                                                          0,0,0);
  fBackTopCub = new G4PVPlacement(0,
                                   G4ThreeVector(BackTopCubPosX, BackTopCubPosY, BackTopCubPosZ),
                                   logicBackTopCub,
                                   "BackTopCub",
                                   logicWorld,
                                  false,
                                  0);                    
  
  logicBackTopCub->SetVisAttributes(BoxVisAttGrey);

   //--------------Back Bottom Cubiod ----------------------//
  G4double BackBottomCubDimX = 5*mm, BackBottomCubDimY = 26.5*mm, BackBottomCubDimZ = 5*mm;
  
  G4double BackBottomCubPosX = 0, BackBottomCubPosY = -24.75*mm, BackBottomCubPosZ = BackPosZ;
  
  G4Box* BackBottomCub = new G4Box("AlBackBottomCub",BackBottomCubDimX/2, BackBottomCubDimY/2, BackBottomCubDimZ/2);
   
  G4LogicalVolume* logicBackBottomCub = new G4LogicalVolume(BackBottomCub,
                                                          PureAluminum,
                                                          "BackBottomCubFrame",
                                                          0,0,0);
  fBackBottomCub = new G4PVPlacement(0,
                                   G4ThreeVector(BackBottomCubPosX, BackBottomCubPosY, BackBottomCubPosZ),
                                   logicBackBottomCub,
                                   "BackBottomCub",
                                   logicWorld,
                                  false,
                                  0);  

  logicBackBottomCub->SetVisAttributes(BoxVisAttGrey);

//***************************************************************************************************************************************************************//

  // ---------- Construct the Mylar on the right and make it red ------------------//
   G4double MylarDimX = 0.0025*mm, 
            MylarDimY = 20.0*cm, 
            MylarDimZ = 70.0*cm;

    G4double MylarFilmPosX = MylarDimX/2+WCthick/2, MylarFilmPosX2 = -MylarFilmPosX, MylarFilmPosY = 0*cm, MylarFilmPosZ = 0*cm;
   
    G4Box* Mylarfilm = new G4Box("mylar", MylarDimX/2,MylarDimY/2, MylarDimZ/2);

    G4LogicalVolume* logicMylarFilm = new G4LogicalVolume(
					       Mylarfilm, 
					       Mylar,
					       "MylarFilm", 
					       0,0,0);
 
   fMylarFilm = new G4PVPlacement(0,
		                 G4ThreeVector(MylarFilmPosX-WCPosTracker, MylarFilmPosY, MylarFilmPosZ),
					   logicMylarFilm,
					   "MFPosTInerR",
						logicTracker,
						false,
                                               0);

  //Right hand side inner A chamber poster position mylar

  G4Box* Mylarfilm2 = new G4Box("mylar2", MylarDimX/2,
				          MylarDimY/2, MylarDimZ/2);

  G4LogicalVolume* logicMylarFilm2 = new G4LogicalVolume(
					       Mylarfilm2, 
					       Mylar,
					       "MylarFilm2", 
					       0,0,0);						
   fMylarFilm2 = new G4PVPlacement(0,
		G4ThreeVector(MylarFilmPosX2-WCPosTracker, MylarFilmPosY, MylarFilmPosZ),
					   logicMylarFilm2,
					   "MFilmPreVInnerR",
				           logicTracker,
      				           false,
                                            0);

//**************************************************************************************************************************************//
    G4Box* MylarfilmR1 = new G4Box("mylarR1", MylarDimX/2,MylarDimY/2, MylarDimZ/2);

    G4LogicalVolume* logicMylarFilmR1 = new G4LogicalVolume(
					       MylarfilmR1, 
					       Mylar,
					       "MylarFilm", 
					       0,0,0);
 
   fMylarFilmR1 = new G4PVPlacement(0,
		                 G4ThreeVector(MylarFilmPosX+WCPosTracker, MylarFilmPosY, MylarFilmPosZ),
					   logicMylarFilmR1,
					   "MFlimPosTOuterR",
						logicTracker,
						false,
                                               0);//Outer Chamber Post Right


  G4Box* MylarfilmR2 = new G4Box("mylarR2", MylarDimX/2,
				           MylarDimY/2, MylarDimZ/2);

  G4LogicalVolume* logicMylarFilmR2 = new G4LogicalVolume(
					       MylarfilmR2, 
					       Mylar,
					       "MylarFilmR2", 
					       0,0,0);						
   fMylarFilmR2 = new G4PVPlacement(0,
		G4ThreeVector(MylarFilmPosX2+WCPosTracker, MylarFilmPosY, MylarFilmPosZ),
					   logicMylarFilmR2,
					   "MFilmPreVOuterR",
						logicTracker,
						false,
						0);						
  
  

////-----------------------------------left four mylar films----------------------------------------/////
   
   G4Box* Mylarfilmleft = new G4Box("mylar", MylarDimX/2,MylarDimY/2, MylarDimZ/2);

    G4LogicalVolume* logicMylarFilmleft = new G4LogicalVolume(
					       Mylarfilmleft, 
					       Mylar,
					       "MylarFilmleft", 
					       0,0,0);
 
   fMylarFilmleft = new G4PVPlacement(0,
		                 G4ThreeVector(MylarFilmPosX+WCPosTracker, MylarFilmPosY, MylarFilmPosZ),
					   logicMylarFilmleft,
					   "MFilmPreVInnerL",
						logicTrackerleft,
						false,
                                               0);

   
   G4Box* Mylarfilmleft2 = new G4Box("mylar2", MylarDimX/2,
				           MylarDimY/2, MylarDimZ/2);

   G4LogicalVolume* logicMylarFilmleft2 = new G4LogicalVolume(
					       Mylarfilmleft2, 
					       Mylar,
					       "MylarFilmleft2", 
					       0,0,0);						
   fMylarFilmleft2 = new G4PVPlacement(0,
		G4ThreeVector(MylarFilmPosX2+WCPosTracker, MylarFilmPosY, MylarFilmPosZ),
					   logicMylarFilmleft2,
					   "MFPosTInerL",
						logicTrackerleft,
						false,
						0);

   G4Box* MylarfilmleftL1 = new G4Box("mylar", MylarDimX/2,MylarDimY/2, MylarDimZ/2);
   G4LogicalVolume* logicMylarFilmleftL1 = new G4LogicalVolume(
					       MylarfilmleftL1, 
					       Mylar,
					       "MylarFilmleftL1", 
	 				       0,0,0);

    fMylarFilmleftL1 = new G4PVPlacement(0,
		                 G4ThreeVector(MylarFilmPosX-WCPosTracker, MylarFilmPosY, MylarFilmPosZ),
					   logicMylarFilmleftL1,
					   "MFilmPreVOuterL",
						logicTrackerleft,
						false,
                                               0);//Outer Chamber Prev Film, left

  G4Box* MylarfilmleftL2 = new G4Box("mylar", MylarDimX/2,MylarDimY/2, MylarDimZ/2);
   G4LogicalVolume* logicMylarFilmleftL2 = new G4LogicalVolume(
					       MylarfilmleftL2, 
					       Mylar,
					       "MylarFilmleftL2", 
	 				       0,0,0);

    fMylarFilmleftL2 = new G4PVPlacement(0,
		                 G4ThreeVector(MylarFilmPosX2-WCPosTracker, MylarFilmPosY, MylarFilmPosZ),
					   logicMylarFilmleftL2,
					   "MFPosTOuterL",
						logicTrackerleft,
						false,
                                               0);//OuterPostfilm Left
   

   G4VisAttributes* BoxVisAttRed = new G4VisAttributes(G4Colour(1., 0., 0.));
   BoxVisAttRed->SetForceSolid(TRUE);
   logicMylarFilm->SetVisAttributes(BoxVisAttRed);
   logicMylarFilm2->SetVisAttributes(BoxVisAttRed);
   logicMylarFilmR1->SetVisAttributes(BoxVisAttRed);
   logicMylarFilmR2->SetVisAttributes(BoxVisAttRed);
   logicMylarFilmleft->SetVisAttributes(BoxVisAttRed);
   logicMylarFilmleft2->SetVisAttributes(BoxVisAttRed);
   logicMylarFilmleftL1->SetVisAttributes(BoxVisAttRed);   
   logicMylarFilmleftL2->SetVisAttributes(BoxVisAttRed); 

// ---------- Construct the Right seven silicon detector and make it blue ------------------//
   // Silicon detector Position
   G4double SiliconDetectorPosX = 7*cm, SiliconDetectorPosY = 0*cm, 
            SiliconDetectorPosZ = 0*cm;

   // Silicon Detector
   G4double SiliconDetectorDimX = 10.0*mm, 
            SiliconDetectorDimY = 10.0*cm, 
            SiliconDetectorDimZ = 10.0*cm,
            SiliconSpace = 1.0*cm;

// -----//----- Construct the Right 0  silicon detector and make it blue --------//----------//
   
  G4Box* solidSiliconDetector0R = new G4Box("siliconDetector0R", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector0R = new G4LogicalVolume(
					       solidSiliconDetector0R, 
					       Silicon,
					       "SiliconDetector0R", 
					       0,0,0);
 
   fSiliconDetector0R = new G4PVPlacement(0,
		G4ThreeVector(SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ-3*SiliconSpace-3*SiliconDetectorDimZ),
					   logicSiliconDetector0R,
					   "SDetector",
						logicWorld,
						false,
						0);

// ----//------ Construct the Right 1  silicon detector and make it blue -------//-----------//
   
  G4Box* solidSiliconDetector1R = new G4Box("siliconDetector1R", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector1R = new G4LogicalVolume(
					       solidSiliconDetector1R, 
					       Silicon,
					       "SiliconDetector1R", 
					       0,0,0);
 
   fSiliconDetector1R = new G4PVPlacement(0,
		G4ThreeVector(SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ-2*SiliconSpace-2*SiliconDetectorDimZ),
					   logicSiliconDetector1R,
					   "SDetector",
						logicWorld,
						false,
						0);

// ---//------- Construct the Right 2 silicon detector and make it blue -------//-----------//
  
   G4Box* solidSiliconDetector2R = new G4Box("siliconDetector2R", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector2R = new G4LogicalVolume(
					       solidSiliconDetector2R, 
					       Silicon,
					       "SiliconDetector2R", 
					       0,0,0);
 
   fSiliconDetector2R = new G4PVPlacement(0,
		G4ThreeVector(SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ-SiliconSpace-SiliconDetectorDimZ),
					   logicSiliconDetector2R,
					   "SDetector",
						logicWorld,
						false,
						0);

//-------// ---------- Construct the Right 3 (the middle) silicon detector and make it blue ------//------------//
   G4Box* solidSiliconDetector3R = new G4Box("siliconDetector3R", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);
   G4LogicalVolume* logicSiliconDetector3R = new G4LogicalVolume(
					       solidSiliconDetector3R, 
					       Silicon,
					       "SiliconDetector3R", 
					       0,0,0);
 
   fSiliconDetector3R = new G4PVPlacement(0,
		G4ThreeVector(SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ),
					   logicSiliconDetector3R,
					   "SDetector",
						logicWorld,
						false,
						0);

 //-------// ---------- Construct the Right 4 silicon detector and make it blue ------//------------//
   G4Box* solidSiliconDetector4R = new G4Box("siliconDetector4R", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector4R = new G4LogicalVolume(
					       solidSiliconDetector4R, 
					       Silicon,
					       "SiliconDetector4R", 
					       0,0,0);
 
   fSiliconDetector4R = new G4PVPlacement(0,
		G4ThreeVector(SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ+SiliconSpace+SiliconDetectorDimZ),
					   logicSiliconDetector4R,
					   "SDetector",
						logicWorld,
						false,
						0);

 //-------// ---------- Construct the Right 5 silicon detector and make it blue ------//------------//
   G4Box* solidSiliconDetector5R = new G4Box("siliconDetector5R", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector5R = new G4LogicalVolume(
					       solidSiliconDetector5R, 
					       Silicon,
					       "SiliconDetector5R", 
					       0,0,0);
 
   fSiliconDetector5R = new G4PVPlacement(0,
		G4ThreeVector(SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ+2*SiliconSpace+2*SiliconDetectorDimZ),
					   logicSiliconDetector5R,
					   "SDetector",
						logicWorld,
						false,
						0);

//-------// ---------- Construct the Right 6 silicon detector and make it blue ------//------------//
   G4Box* solidSiliconDetector6R = new G4Box("siliconDetector6R", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector6R = new G4LogicalVolume(
					       solidSiliconDetector6R, 
					       Silicon,
					       "SiliconDetector6R", 
					       0,0,0);
 
   fSiliconDetector6R = new G4PVPlacement(0,
		G4ThreeVector(SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ+3*SiliconSpace+3*SiliconDetectorDimZ),
					   logicSiliconDetector6R,
					   "SDetector",
						logicWorld,
						false,
						0);
  
  // -----//----- Construct the Left 0  silicon detector and make it blue --------//----------//
   
  G4Box* solidSiliconDetector0L = new G4Box("siliconDetector0L", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector0L = new G4LogicalVolume(
					       solidSiliconDetector0L, 
					       Silicon,
					       "SiliconDetector0L", 
					       0,0,0);
 
   fSiliconDetector0L = new G4PVPlacement(0,
		G4ThreeVector(-SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ-3*SiliconSpace-3*SiliconDetectorDimZ),
					   logicSiliconDetector0L,
					   "SDetector",
						logicWorld,
						false,
						0);
  
// ----//------ Construct the Left 1  silicon detector and make it blue -------//-----------//
   
  G4Box* solidSiliconDetector1L = new G4Box("siliconDetector1L", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector1L = new G4LogicalVolume(
					       solidSiliconDetector1L, 
					       Silicon,
					       "SiliconDetector1L", 
					       0,0,0);
 
   fSiliconDetector1L = new G4PVPlacement(0,
		G4ThreeVector(-SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ-2*SiliconSpace-2*SiliconDetectorDimZ),
					   logicSiliconDetector1L,
					   "SDetector",
						logicWorld,
						false,
						0);

// ---//------- Construct the Left 2 silicon detector and make it blue -------//-----------//
  
   G4Box* solidSiliconDetector2L = new G4Box("siliconDetector2L", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector2L = new G4LogicalVolume(
					       solidSiliconDetector2L, 
					       Silicon,
					       "SiliconDetector2L", 
					       0,0,0);
 
   fSiliconDetector2L = new G4PVPlacement(0,
		G4ThreeVector(-SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ-SiliconSpace-SiliconDetectorDimZ),
					   logicSiliconDetector2L,
					   "SDetector",
						logicWorld,
						false,
						0);

//-------// ---------- Construct the Left 3 (the middle) silicon detector and make it blue ------//------------//
   G4Box* solidSiliconDetector3L = new G4Box("siliconDetector3L", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);
   G4LogicalVolume* logicSiliconDetector3L = new G4LogicalVolume(
					       solidSiliconDetector3L, 
					       Silicon,
					       "SiliconDetector3L", 
					       0,0,0);
 
   fSiliconDetector3L = new G4PVPlacement(0,
		G4ThreeVector(-SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ),
					   logicSiliconDetector3L,
					   "SDetector",
						logicWorld,
						false,
						0);

 //-------// ---------- Construct the Left 4 silicon detector and make it blue ------//------------//
   G4Box* solidSiliconDetector4L = new G4Box("siliconDetector4L", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector4L = new G4LogicalVolume(
					       solidSiliconDetector4L, 
					       Silicon,
					       "SiliconDetector4L", 
					       0,0,0);
 
   fSiliconDetector4L = new G4PVPlacement(0,
		G4ThreeVector(-SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ+SiliconSpace+SiliconDetectorDimZ),
					   logicSiliconDetector4L,
					   "SDetector",
						logicWorld,
						false,
						0);

 //-------// ---------- Construct the Left 5 silicon detector and make it blue ------//------------//
   G4Box* solidSiliconDetector5L = new G4Box("siliconDetector5L", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector5L = new G4LogicalVolume(
					       solidSiliconDetector5L, 
					       Silicon,
					       "SiliconDetector5L", 
					       0,0,0);
 
   fSiliconDetector5L = new G4PVPlacement(0,
		G4ThreeVector(-SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ+2*SiliconSpace+2*SiliconDetectorDimZ),
					   logicSiliconDetector5L,
					   "SDetector",
						logicWorld,
						false,
						0);

//-------// ---------- Construct the Left 6 silicon detector and make it blue ------//------------//
   G4Box* solidSiliconDetector6L = new G4Box("siliconDetector6L", SiliconDetectorDimX/2,
				           SiliconDetectorDimY/2, SiliconDetectorDimZ/2);

   G4LogicalVolume* logicSiliconDetector6L = new G4LogicalVolume(
					       solidSiliconDetector6L, 
					       Silicon,
					       "SiliconDetector6L", 
					       0,0,0);
 
   fSiliconDetector6L = new G4PVPlacement(0,
		G4ThreeVector(-SiliconDetectorPosX, SiliconDetectorPosY, SiliconDetectorPosZ+3*SiliconSpace+3*SiliconDetectorDimZ),
					   logicSiliconDetector6L,
					   "SDetector",
						logicWorld,
						false,
						0);


   G4VisAttributes* BoxVisAttGreen = new G4VisAttributes(G4Colour(0., 1., 0.));
   BoxVisAttGreen->SetForceSolid(TRUE);
   logicSiliconDetector0R->SetVisAttributes(BoxVisAttGreen); 
   logicSiliconDetector1R->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector2R->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector3R->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector4R->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector5R->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector6R->SetVisAttributes(BoxVisAttGreen);
   
   logicSiliconDetector0L->SetVisAttributes(BoxVisAttGreen); 
   logicSiliconDetector1L->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector2L->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector3L->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector4L->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector5L->SetVisAttributes(BoxVisAttGreen);
   logicSiliconDetector6L->SetVisAttributes(BoxVisAttGreen);

  return physWorld;
  
}  
